#BlueJ class context
comment0.target=Ponto2D
comment1.params=cx\ cy
comment1.target=Ponto2D(double,\ double)
comment10.params=dx\ dy
comment10.target=Ponto2D\ somaPonto(double,\ double)
comment10.text=soma\ os\ valores\ par\u00E2metro\ e\ devolve\ um\ novo\ ponto
comment11.params=
comment11.target=boolean\ simetrico()
comment11.text=\ determina\ se\ um\ ponto\ \u00E9\ sim\u00E9trico\ (dista\ do\ eixo\ dos\ XX\ o\r\nmesmo\ que\ do\ eixo\ dos\ YY
comment12.params=
comment12.target=boolean\ coordPos()
comment12.text=verifica\ se\ ambas\ as\ coordenadas\ s\u00E3o\ positivas
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=verifica\ se\ os\ 2\ pontos\ s\u00E3o\ iguais
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=Converte\ para\ uma\ representa\u00E7\u00E3o\ textual
comment15.params=
comment15.target=Ponto2D\ clone()
comment15.text=Cria\ uma\ c\u00F3pia\ do\ ponto\ receptor\ (receptor\ \=\ this)
comment2.params=
comment2.target=Ponto2D()
comment3.params=p
comment3.target=Ponto2D(Ponto2D)
comment4.params=
comment4.target=double\ getX()
comment5.params=
comment5.target=double\ getY()
comment6.params=dx\ dy
comment6.target=void\ incCoord(double,\ double)
comment6.text=incremento\ das\ coordenadas
comment7.params=p
comment7.target=double\ distancia(Ponto2D)
comment8.params=dx\ dy
comment8.target=void\ decCoord(double,\ double)
comment8.text=decremento\ das\ coordenadas
comment9.params=p
comment9.target=void\ somaPonto(Ponto2D)
comment9.text=soma\ as\ coordenadas\ do\ ponto\ par\u00E2metro\ ao\ ponto\ receptor
numComments=16
